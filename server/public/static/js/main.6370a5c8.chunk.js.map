{"version":3,"sources":["logo.svg","components/auth/AuthService.js","components/navbar/Navbar.js","components/auth/Signup.js","components/auth/Login.js","components/projects/ProjectService.js","components/projects/Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AuthService","_this","this","Object","classCallCheck","signup","username","password","email","roll","service","post","then","response","data","login","loggedin","get","logout","axios","create","baseURL","concat","process","withCredenteials","Navbar","props","possibleConstructorReturn","getPrototypeOf","call","handleLogout","e","state","loggedInUser","userInSession","react_default","a","createElement","className","Link","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","Component","Signup","handleFormSubmit","event","preventDefault","res","setState","getUser","user","catch","err","console","log","handleChange","target","_event$target","name","value","defineProperty","_this2","onSubmit","for","onChange","rollSel","Login","error","AuthServices","ProjectService","getAllProjects","getOneProject","projectId","reponse","createNewProject","projectname","customer","updateOneProject","_ref","newData","put","deleteOneProject","delete","withCredentials","Projects","dataProjects","pService","uService","userData","userAc","listP","calssName","App","_test","isAuthenticating","getTheUser","userObj","navbar_Navbar","Switch","Route","exact","path","render","projects_Projects","Sites_default","auth_Signup","auth_Login","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6370a5c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios';\n\nclass AuthService{\n  constructor(){\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n      withCredenteials: true\n    });\n  }\n\n\n  signup = (username, password, email, roll)=> {\n    return this.service.post('/signup', {username, password, email, roll})\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/currentuser',) //\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.get('/logout',)\n    .then(response => response.data)\n  }\n}\n\nexport default AuthService;\n\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../auth/AuthService\";\nimport \"bulma/css/bulma.css\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  handleLogout = e => {\n    this.props.logout();\n  };\n\n  render() {\n    if (this.props.userInSession) {\n      return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          \n          <Link className=\"navbar-brand\" to=\"/\">\n            Rollout App\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/projects\">\n                  Proyects\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/sites\">\n                  Sites\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link disabled\" to=\"/consultas\">\n                  Consultas\n                </Link>\n              </li>\n              <li className=\"nav-item active\">\n                <a className=\"nav-link\" onClick={this.handleLogout}>\n                  Logout <span className=\"sr-only\">(current)</span>\n                </a>\n              </li>\n            </ul>\n          </div>\n          \n          <h3>Welcome, {this.props.userInSession.username}</h3>\n        </nav>\n      );\n    } else {\n      return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Rollout App\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/signup\">\n                  Signup\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/login\">\n                  Login\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <h3>Please, login or create an account</h3>\n        </nav>\n      );\n    }\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport AuthService from \"./AuthService\";\n\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      email: \"\",\n      roll: \"Subcontractor\",\n    };\n    this.service = new AuthService()\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    const email = this.state.email;\n    const roll = this.state.roll;\n\n    this.service\n      .signup(username, password, email, roll)\n      .then(res => {\n        this.setState({\n          username: \"\",\n          password: \"\",\n          email: \"\",\n          roll: \"\",\n        });\n        this.props.getUser(res.user);\n      })\n      .catch(err => console.log(err));\n  };\n\n  handleChange = event => {\n    console.log('evento', event.target);\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <h3>Create your account:</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label for=\"username\">User Name:</label>\n            <input\n              id='username'\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n          <fieldset>\n            <label for=\"password\">Password:</label>\n            <input\n              id='password'\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n          <fieldset>\n            <label for=\"email\">email:</label>\n            <input\n              id='email'\n              type='email'\n              name='email'\n              value={this.state.email}\n              onChange={e => this.handleChange(e)}\n              />\n          </fieldset>\n          <fieldset>\n            <label for=\"roll\">Roll:</label>\n            <select \n              id='roll' \n              name='roll'\n              rollSel={this.state.roll}\n              onChange={e => this.handleChange(e)}  // TODO: reemplazar funcion con una especifica para select\n              // TODO: recordar que state debe ser PManager por default\n              >\n              <option value='PManager'>PManager</option>\n              <option value='PController'>PController</option>\n              <option value='Subcontractor'>Subcontractor</option>          \n            </select>\n\n            {/* <input\n              type='text'\n              name='roll'\n              value={this.state.roll}\n              onChange={e => this.handleChange(e)}\n              /> */}\n          </fieldset>\n\n          <input type=\"submit\" value=\"Sign up\" />\n        </form>\n      </div>\n    );\n  }\n}\nexport default Signup;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthServices from \"./AuthService\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n    this.service = new AuthServices();\n  }\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service\n      .login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          error: false\n        });\n        this.props.getUser(response);\n      })\n      .catch(err => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      });\n  };\n\n  handleChange = event => {\n    console.log(\"evento\", event.target);\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <h3>Please, insert your credential to login.....</h3>\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label for=\"username\">User Name:</label>\n            <input\n              id=\"username\"\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n          <fieldset>\n            <label for=\"password\">Password:</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n          <input type=\"submit\" value=\"Log in\" />\n        </form>\n        <h1>{this.state.error ? \"Error\" : \"\"}</h1>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import axios from 'axios';\n\nclass ProjectService {\n  constructor(){\n    this.service = axios.create({\n      baseURL: 'http://localhost:3001/projects',\n      withCredentials: true\n    });\n  }\n\ngetAllProjects = ()=>{\n  return this.service.get('/all', )\n  .then(response => response.data)\n};\n\ngetOneProject = (projectId)=>{\n  return this.service.get(`/${projectId}`, )\n  .then(reponse => reponse.data)\n};\n\ncreateNewProject = (projectname, customer)=>{\n  return this.service.post('/new', {projectname, customer}) \n  .then(reponse => reponse.data)\n};\n\nupdateOneProject = (projectId, {newData})=>{\n  return this.service.put(`/${projectId}`, {newData})\n  .then(reponse => reponse.data)\n};\n\ndeleteOneProject = (projectId)=>{\n  return this.service.delete(`/${projectId}`, )\n  .then(reponse => reponse.data)\n};\n}\n\nexport default ProjectService;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ProjectService from \"./ProjectService\";\nimport AuthService from \"../auth/AuthService\";\n//import \"bulma/css/bulma.css\";\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedInUser: \"\",\n      dataProjects: [],\n    };\n    this.pService = new ProjectService();\n    this.uService = new AuthService();\n  }\n\n  // deberia pasar el usuario o el id del usuario\n\n  componentDidMount() {\n    this.pService.getAllProjects().then(res => {\n      this.setState({\n        loggedInUser: this.props.userData,\n        dataProjects: res\n      });\n    });\n  }\n\n  render() {\n    //console.log(\"Proyectos: ...\", this.state.dataProjects);\n    //console.log(\"Usuario: ..\", this.state.loggedInUser);\n    const userAc = this.state.loggedInUser.username;\n    const listP = this.state.dataProjects;\n    console.log(listP)\n\n\n    console.log(\"Usuario: ..\", userAc)\n// if (this.state.dataProjects){\n//   return(\n//     this.state.dataProjects.map((e, i) =>  <p>{e._id}</p>)\n//   )\n// }\n    return (\n      <div calssName=\"list-group\">\n        <button\n          type=\"button\"\n          calssName=\"list-group-item list-group-item-action active\">\n          <h3>{userAc} Projects list</h3>\n        </button>\n        <ul className=\"list-group\">\n          <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n          Proyecto XXX\n            <span className=\"badge badge-info badge-pill\">Vi</span>\n            <span className=\"badge badge-warning badge-pill\">ed</span>\n            <span className=\"badge badge-danger badge-pill\">de</span>\n          </li>\n\n          <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n          Proyecto XXX\n            <span className=\"badge badge-info badge-pill\">Vi</span>\n            <span className=\"badge badge-warning badge-pill\">ed</span>\n            <span className=\"badge badge-danger badge-pill\">de</span>\n          </li>\n          <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n          Proyecto XXX\n            <span className=\"badge badge-info badge-pill\">Vi</span>\n            <span className=\"badge badge-warning badge-pill\">ed</span>\n            <span className=\"badge badge-danger badge-pill\">de</span>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Navbar from \"./components/navbar/Navbar\";\n\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport AuthService from \"./components/auth/AuthService\";\nimport Projects from \"./components/projects/Projects\";\nimport Sites from \"./components/sites/Sites\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedInUser: null,\n      isAuthenticating: true\n    };\n    this.service = new AuthService();\n  }\n\n  _test = () => {\n    this.service.loggedin()\n      .then(response => {\n        this.setState({\n          loggedInUser: response,\n          isAuthenticating: false\n        });\n      })\n      .catch(err => {\n        this.setState({\n          loggedInUser: false,\n          isAuthenticating: false\n        });\n      });\n  }\n\n  getTheUser = userObj => {\n    this.setState({\n      loggedInUser: userObj,\n      isAuthenticating: false\n    });\n  };\n\n  logout = () => {\n    this.service.logout().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n\n  componentDidMount() {\n    this._test();\n  }\n\n  render() {\n    if (this.state.isAuthenticating)  return null;\n\n    if (this.state.loggedInUser) {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <h1>APP Rollout con usuario</h1>\n            <Navbar\n              userInSession={this.state.loggedInUser}\n              logout={this.logout}\n            />\n            <Switch>\n              <Route\n                exact\n                path=\"/projects\"\n                render={() => <Projects userData={this.state.loggedInUser} />}\n              />\n              <Route\n                exact\n                path=\"/sites\"\n                render={() => <Sites userData={this.state.loggedInUser} />}\n              />\n            </Switch>\n          </header>\n          {/* <Contents></Contents> */}\n        </div>\n      );\n    } else {\n      console.log('prueba 1')\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Navbar\n              userInSession={this.state.loggedInUser}\n              logout={this.logout}\n            />\n            <Switch>\n              <Route\n                exact\n                path=\"/signup\"\n                render={() => <Signup getUser={this.getTheUser} />}\n              />\n              <Route\n                exact\n                path=\"/login\"\n                render={() => <Login getUser={this.getTheUser} />}\n              />\n            </Switch>\n          </header>\n        </div>\n      );\n    }\n\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}